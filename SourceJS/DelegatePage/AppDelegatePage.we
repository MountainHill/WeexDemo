<template>
	<div>
		<list class='list'>
			<cell onappear='onappear' ondisappear='ondisappear' class='row' repeat='{{rowsData}}' index='{{$index}}' onclick='rowDicSelected'>
				<div class="item">
					<text class='item-title'>{{id}}</text>
				</div>
				
			</cell>
			
		</list>

		<!-- <text class='count' value='Appear items:{{appearMin}} - {{appeatMax}}'> </text> -->
	</div>
</template>

<style>
	.list{
		/*margin-top: 128;*/
		/*height: 850*/
		padding: 0;
		margin-bottom: 0;
		/*background-color: red;*/
	}

	.count{
		font-size: 48;
		margin: 10;
	}

	.row{
		width: 750
	}

	.item{
		justify-content: center;
		border-bottom-width: 2;
		border-bottom-color: #c0c0c0;
		height: 100;
		padding: 20;
	}

	.item-title{
		text-align: center;
	}
</style>

<script>
	module.exports = {
		data: {
			appeatMax: 1,
			appearMin: 1,
			appearIds: [],
			rowsData: [
				{id: 'BuiltInComponents'},
				{id: 'Test1'},
				{id: 'DataBinding'},
				{id: 'Repeat'},
				{id: 'ComposedComponent'},
				{id: 'NestingComponent'},
				{id: 'FindElement'},
			],
		},
		methods:{
			onappear: function (e) {
				var appearId = this.rows[e.target.attr.index].id;
				var appearIds = this.appearIds;
				appearIds.push(appearId);
				this.getMinAndMaxIds(appearIds);
			},

			ondisappear: function (e) {
				var disappearId = this.rows[e.target.attr.index].id;
				var appearIds = this.appearIds;
				var index = appearIds.indexOf(disappearId);
				if (index > 1) {
					appearIds.splice(index, 1);
				}
				this.getMinAndMaxIds(appearIds);
			},

			getMinAndMaxIds: function (appearIds) {
				appearIds.sort(function (a, b) {
					return a - b;
				});
				this.appearIds = appearIds;
				this.appeatMax = appearIds[appearIds.length - 1];
				this.appearMin = appearIds[0];
			},

			rowDicSelected: function (e) {
				var eventModule = require('@weex-module/event');
				var url = this.rowsData[e.target.attr.index].id;
				eventModule.openURL(url);
			}

		}
	}
</script>













